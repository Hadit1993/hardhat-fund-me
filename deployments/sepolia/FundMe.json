{
  "address": "0x3906aCFe09396346C1203dF3d3a410BDEBF854b5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9320f15918e5a8138fadc17f10ba2e3b9aec18301b1023a82a4a55611e8d06d3",
  "receipt": {
    "to": null,
    "from": "0xd9C564Df3Be4b1C5dfb3ed89d74a8314De47f25c",
    "contractAddress": "0x3906aCFe09396346C1203dF3d3a410BDEBF854b5",
    "transactionIndex": 23,
    "gasUsed": "812735",
    "logsBloom": "0x
    "blockHash": "0x7db3100aad311208ddd4f7f29b49a5b6fdc6d0caaff8ae12a29bbf8b928f2ed7",
    "transactionHash": "0x9320f15918e5a8138fadc17f10ba2e3b9aec18301b1023a82a4a55611e8d06d3",
    "logs": [],
    "blockNumber": 3439337,
    "cumulativeGasUsed": "3738318",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43"
  ],
  "numDeployments": 1,
  "solcInputHash": "a5ef27e90f8cae126a3a3176b578113b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MIN_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 index = 0; index < funders.length; index++) {\\n            address funder = funders[index];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        //three methods for withdraw funds;\\n\\n        //  payable(msg.sender).transfer(address(this).balance);\\n        // if gas is more than 2300 it throws error\\n\\n        //  bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //if gas is more than 2300 it returns false\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n        //the underscore bellow the require means that before executing the function checks the modifier;\\n        //if the requirement statement was after the underscore it means executes the function and at the end check the modifier;\\n    }\\n\\n    //What happens if someone sends this contract ETH without calling the func function?\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x035bd4472a0a7e8cf2a22688738d6102279b0954338e777404d54a30b471c152\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x53ca509ea9b2925eb1e6fe1344a11a19968ff1f63adfd04f4ed6430736ea592c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eaf380380610eaf83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d5061015f600039600081816102e0015261055e0152610d506000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074c565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ca565b61051e565b604051610103919061074c565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610363576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038857610387610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610406906109cf565b915050610366565b50600067ffffffffffffffff81111561042a57610429610a17565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e92919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a77565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad8565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610af8565b6105ee9190610b69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c27565b5050509150506402540be400816106849190610ca2565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b6000819050919050565b61074681610733565b82525050565b6000602082019050610761600083018461073d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107978261076c565b9050919050565b6107a78161078c565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df610767565b5b60006107ee848285016107b5565b91505092915050565b6000819050919050565b600061081c6108176108128461076c565b6107f7565b61076c565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a8161078c565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610733565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610767565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061093b6013836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da82610733565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0c57610a0b6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a61600083610a46565b9150610a6c82610a51565b600082019050919050565b6000610a8282610a54565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac2600b836108f4565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b6000610b0382610733565b9150610b0e83610733565b9250828202610b1c81610733565b91508282048414831517610b3357610b326109a0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7482610733565b9150610b7f83610733565b925082610b8f57610b8e610b3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb981610b9a565b8114610bc457600080fd5b50565b600081519050610bd681610bb0565b92915050565b6000819050919050565b610bef81610bdc565b8114610bfa57600080fd5b50565b600081519050610c0c81610be6565b92915050565b600081519050610c218161089b565b92915050565b600080600080600060a08688031215610c4357610c42610767565b5b6000610c5188828901610bc7565b9550506020610c6288828901610bfd565b9450506040610c7388828901610c12565b9350506060610c8488828901610c12565b9250506080610c9588828901610bc7565b9150509295509295909350565b6000610cad82610bdc565b9150610cb883610bdc565b9250828202610cc681610bdc565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfe57610cfd6109a0565b5b8282058414831517610d1357610d126109a0565b5b509291505056fea2646970667358221220b7b21ae569b59eedebe373d1f04ebc98e9cea487ece9c6cd02d571069672537a64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074c565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ca565b61051e565b604051610103919061074c565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610363576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038857610387610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610406906109cf565b915050610366565b50600067ffffffffffffffff81111561042a57610429610a17565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e92919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a77565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad8565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610af8565b6105ee9190610b69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c27565b5050509150506402540be400816106849190610ca2565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b6000819050919050565b61074681610733565b82525050565b6000602082019050610761600083018461073d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107978261076c565b9050919050565b6107a78161078c565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df610767565b5b60006107ee848285016107b5565b91505092915050565b6000819050919050565b600061081c6108176108128461076c565b6107f7565b61076c565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a8161078c565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610733565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610767565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061093b6013836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da82610733565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0c57610a0b6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a61600083610a46565b9150610a6c82610a51565b600082019050919050565b6000610a8282610a54565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac2600b836108f4565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b6000610b0382610733565b9150610b0e83610733565b9250828202610b1c81610733565b91508282048414831517610b3357610b326109a0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7482610733565b9150610b7f83610733565b925082610b8f57610b8e610b3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb981610b9a565b8114610bc457600080fd5b50565b600081519050610bd681610bb0565b92915050565b6000819050919050565b610bef81610bdc565b8114610bfa57600080fd5b50565b600081519050610c0c81610be6565b92915050565b600081519050610c218161089b565b92915050565b600080600080600060a08688031215610c4357610c42610767565b5b6000610c5188828901610bc7565b9550506020610c6288828901610bfd565b9450506040610c7388828901610c12565b9350506060610c8488828901610c12565b9250506080610c9588828901610bc7565b9150509295509295909350565b6000610cad82610bdc565b9150610cb883610bdc565b9250828202610cc681610bdc565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfe57610cfd6109a0565b5b8282058414831517610d1357610d126109a0565b5b509291505056fea2646970667358221220b7b21ae569b59eedebe373d1f04ebc98e9cea487ece9c6cd02d571069672537a64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}